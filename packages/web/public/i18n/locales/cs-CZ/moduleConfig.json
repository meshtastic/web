{
	"page": {
		"tabAmbientLighting": "Ambientní osvětlení",
		"tabAudio": "Zvuk",
		"tabCannedMessage": "Canned",
		"tabDetectionSensor": "Detekční senzor",
		"tabExternalNotification": "Ext Notif",
		"tabMqtt": "MQTT",
		"tabNeighborInfo": "Informace o sousedech",
		"tabPaxcounter": "Paxcounter",
		"tabRangeTest": "Zkouška dosahu",
		"tabSerial": "Sériový",
		"tabStoreAndForward": "S&F",
		"tabTelemetry": "Telemetrie"
	},
	"ambientLighting": {
		"title": "Ambient Lighting Settings",
		"description": "Settings for the Ambient Lighting module",
		"ledState": {
			"label": "LED State",
			"description": "Sets LED to on or off"
		},
		"current": {
			"label": "Proud",
			"description": "Sets the current for the LED output. Default is 10"
		},
		"red": {
			"label": "Červená",
			"description": "Sets the red LED level. Values are 0-255"
		},
		"green": {
			"label": "Zelená",
			"description": "Sets the green LED level. Values are 0-255"
		},
		"blue": {
			"label": "Modrá",
			"description": "Sets the blue LED level. Values are 0-255"
		}
	},
	"audio": {
		"title": "Audio Settings",
		"description": "Settings for the Audio module",
		"codec2Enabled": {
			"label": "Codec 2 Enabled",
			"description": "Enable Codec 2 audio encoding"
		},
		"pttPin": {
			"label": "PTT Pin",
			"description": "GPIO pin to use for PTT"
		},
		"bitrate": {
			"label": "Bitrate",
			"description": "Bitrate to use for audio encoding"
		},
		"i2sWs": {
			"label": "i2S WS",
			"description": "GPIO pin to use for i2S WS"
		},
		"i2sSd": {
			"label": "i2S SD",
			"description": "GPIO pin to use for i2S SD"
		},
		"i2sDin": {
			"label": "i2S DIN",
			"description": "GPIO pin to use for i2S DIN"
		},
		"i2sSck": {
			"label": "i2S SCK",
			"description": "GPIO pin to use for i2S SCK"
		}
	},
	"cannedMessage": {
		"title": "Canned Message Settings",
		"description": "Settings for the Canned Message module",
		"moduleEnabled": {
			"label": "Module Enabled",
			"description": "Enable Canned Message"
		},
		"rotary1Enabled": {
			"label": "Rotary Encoder #1 Enabled",
			"description": "Enable the rotary encoder"
		},
		"inputbrokerPinA": {
			"label": "Encoder Pin A",
			"description": "GPIO Pin Value (1-39) For encoder port A"
		},
		"inputbrokerPinB": {
			"label": "Encoder Pin B",
			"description": "GPIO Pin Value (1-39) For encoder port B"
		},
		"inputbrokerPinPress": {
			"label": "Encoder Pin Press",
			"description": "GPIO Pin Value (1-39) For encoder Press"
		},
		"inputbrokerEventCw": {
			"label": "Clockwise event",
			"description": "Select input event."
		},
		"inputbrokerEventCcw": {
			"label": "Counter Clockwise event",
			"description": "Select input event."
		},
		"inputbrokerEventPress": {
			"label": "Press event",
			"description": "Select input event"
		},
		"updown1Enabled": {
			"label": "Up Down enabled",
			"description": "Enable the up / down encoder"
		},
		"allowInputSource": {
			"label": "Allow Input Source",
			"description": "Select from: '_any', 'rotEnc1', 'upDownEnc1', 'cardkb'"
		},
		"sendBell": {
			"label": "Send Bell",
			"description": "Sends a bell character with each message"
		}
	},
	"detectionSensor": {
		"title": "Detection Sensor Settings",
		"description": "Settings for the Detection Sensor module",
		"enabled": {
			"label": "Povoleno",
			"description": "Enable or disable Detection Sensor Module"
		},
		"minimumBroadcastSecs": {
			"label": "Minimum Broadcast Seconds",
			"description": "The interval in seconds of how often we can send a message to the mesh when a state change is detected"
		},
		"stateBroadcastSecs": {
			"label": "State Broadcast Seconds",
			"description": "The interval in seconds of how often we should send a message to the mesh with the current state regardless of changes"
		},
		"sendBell": {
			"label": "Send Bell",
			"description": "Send ASCII bell with alert message"
		},
		"name": {
			"label": "Friendly Name",
			"description": "Used to format the message sent to mesh, max 20 Characters"
		},
		"monitorPin": {
			"label": "Monitor Pin",
			"description": "The GPIO pin to monitor for state changes"
		},
		"detectionTriggerType": {
			"label": "Detection Triggered Type",
			"description": "The type of trigger event to be used"
		},
		"usePullup": {
			"label": "Use Pullup",
			"description": "Whether or not use INPUT_PULLUP mode for GPIO pin"
		}
	},
	"externalNotification": {
		"title": "External Notification Settings",
		"description": "Configure the external notification module",
		"enabled": {
			"label": "Module Enabled",
			"description": "Enable External Notification"
		},
		"outputMs": {
			"label": "Output MS",
			"description": "Output MS"
		},
		"output": {
			"label": "Output",
			"description": "Output"
		},
		"outputVibra": {
			"label": "Output Vibrate",
			"description": "Output Vibrate"
		},
		"outputBuzzer": {
			"label": "Output Buzzer",
			"description": "Output Buzzer"
		},
		"active": {
			"label": "Active",
			"description": "Active"
		},
		"alertMessage": {
			"label": "Alert Message",
			"description": "Alert Message"
		},
		"alertMessageVibra": {
			"label": "Alert Message Vibrate",
			"description": "Alert Message Vibrate"
		},
		"alertMessageBuzzer": {
			"label": "Alert Message Buzzer",
			"description": "Alert Message Buzzer"
		},
		"alertBell": {
			"label": "Alert Bell",
			"description": "Should an alert be triggered when receiving an incoming bell?"
		},
		"alertBellVibra": {
			"label": "Alert Bell Vibrate",
			"description": "Alert Bell Vibrate"
		},
		"alertBellBuzzer": {
			"label": "Alert Bell Buzzer",
			"description": "Alert Bell Buzzer"
		},
		"usePwm": {
			"label": "Use PWM",
			"description": "Use PWM"
		},
		"nagTimeout": {
			"label": "Nag Timeout",
			"description": "Nag Timeout"
		},
		"useI2sAsBuzzer": {
			"label": "Use I²S Pin as Buzzer",
			"description": "Designate I²S Pin as Buzzer Output"
		}
	},
	"mqtt": {
		"title": "MQTT Settings",
		"description": "Settings for the MQTT module",
		"enabled": {
			"label": "Povoleno",
			"description": "Enable or disable MQTT"
		},
		"address": {
			"label": "MQTT Server Address",
			"description": "MQTT server address to use for default/custom servers"
		},
		"username": {
			"label": "MQTT Username",
			"description": "MQTT username to use for default/custom servers"
		},
		"password": {
			"label": "MQTT Password",
			"description": "MQTT password to use for default/custom servers"
		},
		"encryptionEnabled": {
			"label": "Encryption Enabled",
			"description": "Enable or disable MQTT encryption. Note: All messages are sent to the MQTT broker unencrypted if this option is not enabled, even when your uplink channels have encryption keys set. This includes position data."
		},
		"jsonEnabled": {
			"label": "JSON Enabled",
			"description": "Whether to send/consume JSON packets on MQTT"
		},
		"tlsEnabled": {
			"label": "TLS povoleno",
			"description": "Enable or disable TLS"
		},
		"root": {
			"label": "Kořenové téma",
			"description": "MQTT root topic to use for default/custom servers"
		},
		"proxyToClientEnabled": {
			"label": "MQTT Client Proxy Enabled",
			"description": "Utilizes the network connection to proxy MQTT messages to the client."
		},
		"mapReportingEnabled": {
			"label": "Map Reporting Enabled",
			"description": "Your node will periodically send an unencrypted map report packet to the configured MQTT server, this includes id, short and long name, approximate location, hardware model, role, firmware version, LoRa region, modem preset and primary channel name."
		},
		"mapReportSettings": {
			"publishIntervalSecs": {
				"label": "Map Report Publish Interval (s)",
				"description": "Interval in seconds to publish map reports"
			},
			"positionPrecision": {
				"label": "Approximate Location",
				"description": "Position shared will be accurate within this distance",
				"options": {
					"metric_km23": "Within 23 km",
					"metric_km12": "Within 12 km",
					"metric_km5_8": "Within 5.8 km",
					"metric_km2_9": "Within 2.9 km",
					"metric_km1_5": "Within 1.5 km",
					"metric_m700": "Within 700 m",
					"metric_m350": "Within 350 m",
					"metric_m200": "Within 200 m",
					"metric_m90": "Within 90 m",
					"metric_m50": "Within 50 m",
					"imperial_mi15": "Within 15 miles",
					"imperial_mi7_3": "Within 7.3 miles",
					"imperial_mi3_6": "Within 3.6 miles",
					"imperial_mi1_8": "Within 1.8 miles",
					"imperial_mi0_9": "Within 0.9 miles",
					"imperial_mi0_5": "Within 0.5 miles",
					"imperial_mi0_2": "Within 0.2 miles",
					"imperial_ft600": "Within 600 feet",
					"imperial_ft300": "Within 300 feet",
					"imperial_ft150": "Within 150 feet"
				}
			}
		}
	},
	"neighborInfo": {
		"title": "Neighbor Info Settings",
		"description": "Settings for the Neighbor Info module",
		"enabled": {
			"label": "Povoleno",
			"description": "Enable or disable Neighbor Info Module"
		},
		"updateInterval": {
			"label": "Update Interval",
			"description": "Interval in seconds of how often we should try to send our Neighbor Info to the mesh"
		}
	},
	"paxcounter": {
		"title": "Paxcounter Settings",
		"description": "Settings for the Paxcounter module",
		"enabled": {
			"label": "Module Enabled",
			"description": "Enable Paxcounter"
		},
		"paxcounterUpdateInterval": {
			"label": "Update Interval (seconds)",
			"description": "How long to wait between sending paxcounter packets"
		},
		"wifiThreshold": {
			"label": "WiFi RSSI Threshold",
			"description": "At what WiFi RSSI level should the counter increase. Defaults to -80."
		},
		"bleThreshold": {
			"label": "BLE RSSI Threshold",
			"description": "At what BLE RSSI level should the counter increase. Defaults to -80."
		}
	},
	"rangeTest": {
		"title": "Range Test Settings",
		"description": "Settings for the Range Test module",
		"enabled": {
			"label": "Module Enabled",
			"description": "Enable Range Test"
		},
		"sender": {
			"label": "Message Interval",
			"description": "How long to wait between sending test packets"
		},
		"save": {
			"label": "Save CSV to storage",
			"description": "ESP32 Only"
		}
	},
	"serial": {
		"title": "Serial Settings",
		"description": "Settings for the Serial module",
		"enabled": {
			"label": "Module Enabled",
			"description": "Enable Serial output"
		},
		"echo": {
			"label": "Echo",
			"description": "Any packets you send will be echoed back to your device"
		},
		"rxd": {
			"label": "Receive Pin",
			"description": "Set the GPIO pin to the RXD pin you have set up."
		},
		"txd": {
			"label": "Transmit Pin",
			"description": "Set the GPIO pin to the TXD pin you have set up."
		},
		"baud": {
			"label": "Baud Rate",
			"description": "The serial baud rate"
		},
		"timeout": {
			"label": "Vypršel čas spojení",
			"description": "Seconds to wait before we consider your packet as 'done'"
		},
		"mode": {
			"label": "Mode",
			"description": "Select Mode"
		},
		"overrideConsoleSerialPort": {
			"label": "Override Console Serial Port",
			"description": "If you have a serial port connected to the console, this will override it."
		}
	},
	"storeForward": {
		"title": "Store & Forward Settings",
		"description": "Settings for the Store & Forward module",
		"enabled": {
			"label": "Module Enabled",
			"description": "Enable Store & Forward"
		},
		"heartbeat": {
			"label": "Heartbeat Enabled",
			"description": "Enable Store & Forward heartbeat"
		},
		"records": {
			"label": "Počet záznamů",
			"description": "Number of records to store"
		},
		"historyReturnMax": {
			"label": "History return max",
			"description": "Max number of records to return"
		},
		"historyReturnWindow": {
			"label": "History return window",
			"description": "Max number of records to return"
		}
	},
	"telemetry": {
		"title": "Telemetry Settings",
		"description": "Settings for the Telemetry module",
		"deviceUpdateInterval": {
			"label": "Device Metrics",
			"description": "Interval aktualizace metrik zařízení (v sekundách)"
		},
		"environmentUpdateInterval": {
			"label": "Interval aktualizace metrik životního prostředí (v sekundách)",
			"description": ""
		},
		"environmentMeasurementEnabled": {
			"label": "Module Enabled",
			"description": "Enable the Environment Telemetry"
		},
		"environmentScreenEnabled": {
			"label": "Displayed on Screen",
			"description": "Show the Telemetry Module on the OLED"
		},
		"environmentDisplayFahrenheit": {
			"label": "Display Fahrenheit",
			"description": "Display temp in Fahrenheit"
		},
		"airQualityEnabled": {
			"label": "Air Quality Enabled",
			"description": "Enable the Air Quality Telemetry"
		},
		"airQualityInterval": {
			"label": "Air Quality Update Interval",
			"description": "How often to send Air Quality data over the mesh"
		},
		"powerMeasurementEnabled": {
			"label": "Power Measurement Enabled",
			"description": "Enable the Power Measurement Telemetry"
		},
		"powerUpdateInterval": {
			"label": "Power Update Interval",
			"description": "How often to send Power data over the mesh"
		},
		"powerScreenEnabled": {
			"label": "Power Screen Enabled",
			"description": "Enable the Power Telemetry Screen"
		}
	}
}
